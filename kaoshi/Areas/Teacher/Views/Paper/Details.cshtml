@model kaoshi.Models.es_paper
<style type="text/css">
   .paper-info blockquote {
      border: solid 1px #eee;
      border-left: solid 3px #eee;
   }

   .test {
      padding: 8px 2px;
      font-size: 15px;
      background: #FFFFFF;
      color: #333;
   }

   .test-header {
      padding: 8px 2px;
      background: #C4CBCD;
      margin-bottom: 5px;
   }

   .test-items {
      margin-bottom: 10px;
   }

   .test-items .answer {
      background: #F5F5F5;
   }
   .test-items .answer span{
      color:rgb(70, 136, 71);
   }
   .test-options {
      padding: 8px 2px;
   }
   .test-options .abcd{
      padding: 0 15px 0 30px;
   }
      .test-options span, .test .input-group span {
         cursor: pointer;
         color: #333;
      }

   .test .fleft {
      position: absolute;
      display: block;
      width: 25px;
   }

   .test span.content {
      margin-left: 30px;
      margin-right: 60px;
      display: block;
   }

   .test span.fright {
      position: absolute;
      top: 0;
      right: 10px;
      display: block;
   }

   .test-container .control {
      margin-bottom: 20px;
   }

   .panel-body {
      padding: 5px;
   }
</style>
@{
   ViewBag.Title = "Details";
   ViewBag.Controller = "试卷";
   ViewBag.Action = "列表";
}

<div class="top-tools">
   <div class="action"><span class="glyphicon glyphicon-map-marker"></span>试卷详情</div>
   @Html.ActionLink("返回列表", "Index")
   @Html.ActionLink("编辑试卷", "Index")
</div>

<div class="render-datas">
   <div class="paper-info">
      <blockquote>
         <dl class="dl-horizontal">
            <dt>
               @Html.DisplayNameFor(model => model.es_subject.name)
            </dt>

            <dd>
               @Html.DisplayFor(model => model.es_subject.name)
            </dd>

            <dt>
               @Html.DisplayNameFor(model => model.name)
            </dt>

            <dd>
               @Html.DisplayFor(model => model.name)
            </dd>

            <dt>
               @Html.DisplayNameFor(model => model.ab_paging)
            </dt>

            <dd>
               @Html.DisplayFor(model => model.ab_paging)
            </dd>

            <dt>
               @Html.DisplayNameFor(model => model.test_time)
            </dt>

            <dd>
               @Html.DisplayFor(model => model.test_time)
            </dd>

            <dt>
               @Html.DisplayNameFor(model => model.total_points)
            </dt>

            <dd>
               @Html.DisplayFor(model => model.total_points)
            </dd>

         </dl>
      </blockquote>
   </div>

   <div class="row compose-box" ng-app="myApp">
      <div class="clearfix" ng-controller="Control">
         <div class="col-md-12 paper-views">
            <div class="panel panel-default">
               <div class="panel-heading"><h4>试卷预览</h4></div>
               <div class="panel-body">
                  <div class="panel composes" ng-repeat="c in composes">
                     <div class="panel-heading clearfix">
                        <div class="pull-left">
                           <span ng-bind="c.type"></span>.
                           <span ng-bind="c.typeName"></span>
                           <span>({{c.tests.length}}/{{c.number}})</span>
                        </div>
                        <div class="pull-right">
                           <span ng-bind="c.value"></span>x
                           <span ng-bind="c.number"></span>=
                           <span ng-bind="c.value*c.number"></span>
                        </div>
                     </div>
                     <div class="panel-body">
                        <div class="test-items" ng-repeat="t in c.tests">
                           @* 题目信息 *@
                           <div class="test clearfix" ng-cloak>
                              <div class="col-sm-12 title clearfix">
                                 <span class="fleft" ng-cloak>({{$index+1}})</span>
                                 <span class="content" ng-cloak>{{t.title}} (<span ng-bind="t.result"></span>)</span>
                              </div>
                           </div>
                           @* 题目选项 *@
                           <div class="test-options clearfix" ng-class="{'answer':(t.result.indexOf(o.abcd)>-1)}" ng-repeat="o in t.options">
                              <div class="col-sm-11" ng-cloak>
                                 <span ng-bind="o.abcd" class="abcd"></span>
                                 <span ng-bind="o.content"></span>
                              </div>
                              <div class="col-sm-1"><span ng-if="t.result.indexOf(o.abcd)>-1" class="glyphicon glyphicon-ok"></span></div>
                           </div>
                        </div>
                     </div>
                  </div>
               </div>
            </div>
         </div>
      </div>
   </div>
</div>
@section Scripts{
   <script src="~/Scripts/angular.min.js"></script>
   <script>
      angular.module('myApp', [], function ($httpProvider) {
         $httpProvider.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=utf-8';
         $httpProvider.defaults.transformRequest = [function (data) {
            var param = function (obj) {
               var query = '';
               var name, value, fullSubName, subName, subValue, innerObj, i;
               for (name in obj) {
                  value = obj[name];
                  if (value instanceof Array) {
                     for (i = 0; i < value.length; ++i) {
                        subValue = value[i];
                        fullSubName = name + '[' + i + ']';
                        innerObj = {};
                        innerObj[fullSubName] = subValue;
                        query += param(innerObj) + '&';
                     }
                  } else if (value instanceof Object) {
                     for (subName in value) {
                        subValue = value[subName];
                        fullSubName = name + '[' + subName + ']';
                        innerObj = {};
                        innerObj[fullSubName] = subValue;
                        query += param(innerObj) + '&';
                     }
                  } else if (value !== undefined && value !== null) {
                     query += encodeURIComponent(name) + '=' + encodeURIComponent(value) + '&';
                  }
               }
               return query.length ? query.substr(0, query.length - 1) : query;
            };
            return angular.isObject(data) && String(data) !== '[object File]' ? param(data) : data;
         }];
      })
      .controller('Control', function ($scope,$http,$timeout) {

         $http.post('/teacher/paper/GetComposes',{id: @Model.id}).success(function(res){
            $scope.composes = res.composes;
         });
      });
   </script>
}
