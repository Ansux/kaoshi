@model kaoshi.Models.es_test

@{
  ViewBag.Title = "Create";
}

<h2>题库创建</h2>

<div ng-app="myApp" class="row">
  <div ng-controller="testCtrl" class="col-md-6">
    <form name="testForm" ng-submit="submit()" novalidate>
      <div class="form-horizontal">
        <h4>题目</h4>
        <hr />
        <div class="form-group" ng-class="{'has-error':testForm.title.$dirty&&testForm.title.$invalid}">
          <label class="control-label col-md-2">题目</label>
          <div class="col-md-10">
            <input name="title" ng-model="test.title" class="form-control" required />
          </div>
        </div>

        <div class="form-group">
          <label class="control-label col-md-2">题型</label>
          <div class="col-md-10">
            <select class="form-control" ng-model="test.type">
              <option ng-repeat="t in types" value="{{t.Value}}" ng-bind="t.Text"></option>
            </select>
          </div>
        </div>

        <div class="form-group">
          <label class="control-label col-md-2">答案</label>
          <div class="col-md-10">
            <input name="result" ng-model="test.result" class="form-control" />
          </div>
        </div>

        <div class="form-group">
          <label class="control-label col-md-2">科目</label>
          <div class="col-md-10">
            <select class="form-control" ng-model="test.subject">
              <option ng-repeat="s in subjects" value="{{s.Value}}" ng-bind="s.Text"></option>
            </select>
          </div>
        </div>

        <div class="form-group">
          <div class="col-md-offset-2 col-md-10">
            <input type="submit" ng-disabled="testForm.$invalid" value="加入题库" class="btn btn-danger" />
          </div>
        </div>
      </div>
    </form>
  </div>
  <div ng-controller="optionCtrl" class="col-md-6">
    <form name="optionForm" ng-submit="submit()">
      <h4>选项</h4>
      <hr />
      <div class="form-horizontal" ng-if="tid">
        <div class="form-group">
          <label class="control-label col-md-2">ABCD</label>
          <div class="col-md-10">
            <input name="title" ng-model="option.abcd" class="form-control" required />
          </div>
        </div>

        <div class="form-group">
          <label class="control-label col-md-2">内容</label>
          <div class="col-md-10">
            <textarea class="form-control" name="content"></textarea>
          </div>
        </div>

        <div class="form-group">
          <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="添加选项" class="btn btn-danger" />
          </div>
        </div>
      </div>
    </form>
  </div>
</div>

<div>
  @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/angular.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script>
  angular.module('myApp', [], function ($httpProvider) {
    $httpProvider.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=utf-8';
    $httpProvider.defaults.transformRequest = [function (data) {
      var param = function (obj) {
        var query = '';
        var name, value, fullSubName, subName, subValue, innerObj, i;
        for (name in obj) {
          value = obj[name];
          if (value instanceof Array) {
            for (i = 0; i < value.length; ++i) {
              subValue = value[i];
              fullSubName = name + '[' + i + ']';
              innerObj = {};
              innerObj[fullSubName] = subValue;
              query += param(innerObj) + '&';
            }
          } else if (value instanceof Object) {
            for (subName in value) {
              subValue = value[subName];
              fullSubName = name + '[' + subName + ']';
              innerObj = {};
              innerObj[fullSubName] = subValue;
              query += param(innerObj) + '&';
            }
          } else if (value !== undefined && value !== null) {
            query += encodeURIComponent(name) + '=' + encodeURIComponent(value) + '&';
          }
        }
        return query.length ? query.substr(0, query.length - 1) : query;
      };
      return angular.isObject(data) && String(data) !== '[object File]' ? param(data) : data;
    }];
  })
  .run(function ($rootScope) {
    $rootScope.tid = null
  })
  .controller('testCtrl', ['$scope', '$rootScope', '$http', function ($scope, $rootScope, $http) {
    $scope.test = {
      type: undefined,
      subject: undefined
    };
    $http.get('/teacher/test/getDropDownList').success(function (res) {
      var types = res.types;
      var subjects = res.subjects;

      $scope.test.type = types[0].Value;
      $scope.test.subject = subjects[0].Value;

      $scope.types = types;
      $scope.subjects = subjects;
    });
    $scope.submit = function () {
      $http.post('create', $scope.test).success(function (res) {
        $rootScope.tid = res.id;
        console.log(res);
      })
    }
  }])
  .controller('optionCtrl', function ($scope, $rootScope) {

  });
</script>